{"version":3,"sources":["webpack:///src/app/pages/product-list/product-list.html","webpack:///src/app/pages/product-list/product-list-routing.module.ts","webpack:///src/app/pages/product-list/product-list.module.ts","webpack:///src/app/pages/product-list/product-list.scss","webpack:///src/app/pages/product-list/product-list.ts","webpack:///src/app/providers/product-list.provider.ts"],"names":["routes","path","component","ProductListRoutingModule","imports","forChild","exports","ProductListModule","declarations","entryComponents","ProductListPage","productListProvider","basketProvider","loader","alert","route","defaultHref","getBasketFromMemory","storeCode","snapshot","paramMap","get","productCategoryCode","allProductsAbservable","getActiveProductList","basketObjObservable","getBasketForOrder","pipe","basket","totalItemsCount","undefined","items","forEach","item","quantity","errorMessage","componenet","create","cssClass","header","subHeader","message","buttons","present","product","console","log","name","addItemToBasket","selector","template","ProductListProvider","http","angularFireCloudStore","categroyCode","productListAPI","err","handleError","categorCode","shopCode","productsMapResult","collection","SHOP_LIST_COLLECTION","doc","PRODUCT_CATEGORY_MAPPING","ref","where","valueChanges","productId","productRef","PRODUCT_LIST","finalData","id","categoryCode","productList","getActiveProductMappingListByCategoryCode","productMapping","pMap","getActiveProduct","error","caller","ErrorEvent","status","providedIn"],"mappings":"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","file":"product-list-product-list-module-es5.js","sourcesContent":["export default \"<!--\\r\\n  Generated template for the ProductListPage page.\\r\\n\\r\\n  See http://ionicframework.com/docs/components/#navigation for more info on\\r\\n  Ionic pages and navigation.\\r\\n-->\\r\\n<ion-header>\\r\\n  <ion-toolbar color=\\\"crimson\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button [defaultHref]=\\\"defaultHref\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n   <ion-title>\\r\\n      Product List\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"card-background-page\\\">\\r\\n\\t<div *ngIf=\\\"basketObjObservable | async as myBasket ; else loadingErrorTemplate\\\">\\r\\n\\t\\t<div *ngIf = \\\"myBasket.totalItemsCount != 0\\\">\\r\\n\\r\\n\\t\\t\\r\\n\\t\\t<ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" >\\r\\n\\t\\t\\t<ion-fab-button  routerLink=\\\"/app/tabs/market/my-basket\\\">\\r\\n\\t\\t\\t\\t<ion-badge  >{{myBasket.totalItemsCount}}</ion-badge>\\r\\n\\t\\t\\t\\t<ion-icon name=\\\"cart-sharp\\\"></ion-icon></ion-fab-button>\\r\\n\\t\\t  </ion-fab>\\r\\n\\t</div>\\r\\n</div>\\r\\n  <div *ngIf=\\\"allProductsAbservable | async as allProductOb; else loadingErrorTemplate \\\">\\r\\n  <ion-grid>\\r\\n\\t\\r\\n\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t<ion-col col-6 *ngFor=\\\"let product of allProductOb\\\" size=\\\"6\\\">\\r\\n\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"product != undefined; then productcard;\\\"></ng-container>\\r\\n\\t\\t\\t\\t\\t<ng-template #productcard>\\r\\n\\t\\t\\t\\t\\t\\t<ion-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"product.productImageUrl != null; then customImage;else defaultImage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template #customImage>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<img [src]=\\\"product.productImageUrl\\\" />\\r\\n              </ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #defaultImage>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<img\\r\\n                  src=\\\"../../../assets/img/default.jpg\\\"\\r\\n                />\\r\\n              </ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col col-10>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>{{product.name}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col col-2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-icon name=\\\"information-circle\\\"></ion-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-note>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{product.size}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-note>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"product.inStock == true\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col col class=\\\"col-end-align\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-badge color=\\\"secondary\\\">stock</ion-badge>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"product.inStock == false\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col col class=\\\"col-end-align\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-badge color=\\\"danger\\\">no stock</ion-badge>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-row>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"product.price != 0; then displayOld;\\\"></ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #displayOld>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong><del>{{product.price  | currency:'INR'}}</del></strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col class=\\\"newprice\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong><ins>{{product.offeredPrice  | currency:'INR'}}</ins></strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-row>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"product.inStock == true; then addCart; else showOutOfStock\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #addCart>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col col-12 align-self-center text-center class=\\\"cart-button\\\" (click)=\\\"addToBasket(product)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-icon name=\\\"basket\\\"></ion-icon> Add\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #showOutOfStock>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col col-12 align-self-center text-center class=\\\"cart-button out-stock\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-icon name=\\\"basket\\\"></ion-icon> Add\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\t\\t\\t</ion-card>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t</ion-row>\\r\\n\\t</ion-grid>\\r\\n</div>\\r\\n<ng-template #loadingErrorTemplate>\\r\\n\\t<div class=\\\"spin\\\"> <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\r\\n\\t  </div>\\r\\n\\t  \\r\\n  </ng-template>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport {RouterModule,  Routes } from '@angular/router';\r\nimport { ProductListPage } from './product-list';\r\n\r\n\r\n\r\nconst routes:Routes=[\r\n  {\r\n  path:'',\r\n  component:ProductListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes)],\r\n  exports:[RouterModule],\r\n})\r\nexport class ProductListRoutingModule { }","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { ProductListPage } from \"./product-list\";\r\nimport { ProductListRoutingModule } from \"./product-list-routing.module\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule,ProductListRoutingModule],\r\n  declarations: [ProductListPage],\r\n  entryComponents: [ProductListPage]\r\n})\r\nexport class ProductListModule {}\r\n","export default \".card-background-page {\\n  background-color: #b94545;\\n}\\n.card-background-page .newprice {\\n  text-align: end;\\n}\\n.card-background-page .cart-button {\\n  background-color: crimson;\\n  color: white;\\n}\\n.card-background-page .stockin {\\n  background-color: crimson;\\n  color: #f7f4f4;\\n}\\n.card-background-page .out-stock {\\n  opacity: 0.5;\\n}\\n.card-background-page .col-end-align {\\n  text-align: end;\\n}\\nion-toolbar {\\n  color: white;\\n}\\n.spin {\\n  position: fixed;\\n  left: 50%;\\n  top: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvZHVjdC1saXN0L0M6XFxJb25pY1Byb2plY3RcXHBuay1zaG9wcGluZy1pb25pYzUvc3JjXFxhcHBcXHBhZ2VzXFxwcm9kdWN0LWxpc3RcXHByb2R1Y3QtbGlzdC5zY3NzIiwic3JjL2FwcC9wYWdlcy9wcm9kdWN0LWxpc3QvcHJvZHVjdC1saXN0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSx5QkFBQTtBQ0FKO0FERUk7RUFDRSxlQUFBO0FDQU47QURFSTtFQUNFLHlCQUFBO0VBQ0EsWUFBQTtBQ0FOO0FERUk7RUFDRSx5QkFBQTtFQUNBLGNBQUE7QUNBTjtBREVJO0VBQ0UsWUFBQTtBQ0FOO0FERUk7RUFDRSxlQUFBO0FDQU47QURHQTtFQUVJLFlBQUE7QUNESjtBREdBO0VBRUUsZUFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0FDREYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcm9kdWN0LWxpc3QvcHJvZHVjdC1saXN0LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvL3BhZ2UtcHJvZHVjdC1saXN0IHtcclxuICAuY2FyZC1iYWNrZ3JvdW5kLXBhZ2Uge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2I5NDU0NTtcclxuICBcclxuICAgIC5uZXdwcmljZSB7XHJcbiAgICAgIHRleHQtYWxpZ246IGVuZDtcclxuICAgIH1cclxuICAgIC5jYXJ0LWJ1dHRvbiB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGNyaW1zb247XHJcbiAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIH1cclxuICAgIC5zdG9ja2luIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogY3JpbXNvbjtcclxuICAgICAgY29sb3I6IHJnYigyNDcsIDI0NCwgMjQ0KTtcclxuICAgIH1cclxuICAgIC5vdXQtc3RvY2sge1xyXG4gICAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICB9XHJcbiAgICAuY29sLWVuZC1hbGlnbiB7XHJcbiAgICAgIHRleHQtYWxpZ246IGVuZDtcclxuICAgIH1cclxuICB9XHJcbmlvbi10b29sYmFyXHJcbntcclxuICAgIGNvbG9yOndoaXRlO1xyXG59XHJcbi5zcGluXHJcbntcclxuICBwb3NpdGlvbjpmaXhlZDtcclxuICBsZWZ0OjUwJTtcclxuICB0b3A6NTAlO1xyXG59XHJcbi8vfVxyXG4iLCIuY2FyZC1iYWNrZ3JvdW5kLXBhZ2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjk0NTQ1O1xufVxuLmNhcmQtYmFja2dyb3VuZC1wYWdlIC5uZXdwcmljZSB7XG4gIHRleHQtYWxpZ246IGVuZDtcbn1cbi5jYXJkLWJhY2tncm91bmQtcGFnZSAuY2FydC1idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjcmltc29uO1xuICBjb2xvcjogd2hpdGU7XG59XG4uY2FyZC1iYWNrZ3JvdW5kLXBhZ2UgLnN0b2NraW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjcmltc29uO1xuICBjb2xvcjogI2Y3ZjRmNDtcbn1cbi5jYXJkLWJhY2tncm91bmQtcGFnZSAub3V0LXN0b2NrIHtcbiAgb3BhY2l0eTogMC41O1xufVxuLmNhcmQtYmFja2dyb3VuZC1wYWdlIC5jb2wtZW5kLWFsaWduIHtcbiAgdGV4dC1hbGlnbjogZW5kO1xufVxuXG5pb24tdG9vbGJhciB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnNwaW4ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGxlZnQ6IDUwJTtcbiAgdG9wOiA1MCU7XG59Il19 */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AlertController, LoadingController } from \"@ionic/angular\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport {  BasketObj } from \"../../interfaces/basket-interface\";\r\nimport { Product } from \"../../interfaces/product-category\";\r\nimport { BasketProvider } from \"../../providers/basket-provider\";\r\nimport { ProductListProvider } from \"../../providers/product-list.provider\";\r\n\r\n/**\r\n * Generated class for the ShoplistPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@Component({\r\n  selector: \"page-product-list\",\r\n  templateUrl: \"product-list.html\",\r\n    styleUrls: [\"product-list.scss\"]\r\n})\r\nexport class ProductListPage implements OnInit {\r\nallProductsAbservable:Observable<Product[]>\r\nbasketObjObservable:Observable<BasketObj>\r\n  defaultHref='';\r\nconstructor(public productListProvider:ProductListProvider,public basketProvider: BasketProvider,\r\npublic loader:LoadingController,public alert:AlertController,\r\nprivate route: ActivatedRoute)\r\n{\r\n\r\n}\r\n   ionViewDidEnter() {\r\n    this.defaultHref = `/app/tabs/market/product-category-list`;\r\n    this.getBasketFromMemory();\r\n  }\r\n\r\n  // call product-list API to load active products. \r\n ngOnInit() { \r\nconst storeCode = this.route\r\n                 .snapshot\r\n                 .paramMap\r\n                 .get('storeCode'); //get the shopcode from params\r\nconst productCategoryCode = this.route\r\n                            .snapshot\r\n                            .paramMap\r\n                            .get('productCategoryCode');  // get the productcategoryCode.\r\n                            \r\n this.allProductsAbservable=  this.productListProvider\r\n                             .getActiveProductList(productCategoryCode,storeCode); // observable will be called on template  \r\n    this.getBasketFromMemory();\r\n}\r\n\r\n// get latest basket from in-memory.\r\n getBasketFromMemory()\r\n{\r\n  this.basketObjObservable = this.basketProvider\r\n  .getBasketForOrder()\r\n  .pipe(map( basket => {                                    \r\n    let totalItemsCount =  0;\r\n    if(basket != undefined){\r\n     basket.items.forEach(item => \r\n   {\r\n  totalItemsCount = totalItemsCount+ item.quantity;\r\n       });\r\n      }\r\nreturn ({...basket,totalItemsCount:totalItemsCount})\r\n} ))\r\n\r\n}\r\n  async presentAlert(errorMessage:any,componenet:string) {\r\n    const alert = await this.alert.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Alert',\r\n      subHeader: 'Error Occurred:'+errorMessage,\r\n      message: 'Error:'+componenet,\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  addToBasket(product: Product) {\r\n    console.log(\"add to basket clicked\"+product.name);\r\n    // build orderItem.\r\n     this.basketProvider.addItemToBasket(product);\r\n     this.getBasketFromMemory();\r\n  // refresh the basket everytim.// local call - no expensive service call.\r\n  }\r\n\r\n}","import { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable, Optional } from \"@angular/core\";\r\nimport { of, Observable,throwError, from  } from \"rxjs\";\r\nimport { catchError, first, mergeMap, retry, toArray } from 'rxjs/operators';\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product, ProductCategoryProductMapping } from \"../interfaces/product-category\";\r\nimport { environment } from '../../environments/environment'\r\nimport { AngularFirestore } from \"@angular/fire/firestore\";\r\n@Injectable({ providedIn: \"root\" })\r\nexport class ProductListProvider {\r\n  \r\n  /* Data Initialization */\r\n  constructor(public http: HttpClient,\r\n    private angularFireCloudStore: AngularFirestore) {}\r\n\r\n  getProductsByCategory(categroyCode:string):Observable<Product[]>\r\n  {\r\n    return this.http.get<Product[]>(environment.productListAPI)\r\n    .pipe(\r\n   retry(3),\r\n   catchError(err =>this.handleError(err))\r\n    );\r\n      }\r\n\r\n getActiveProductMappingListByCategoryCode(categorCode:string,shopCode:string):Observable<ProductCategoryProductMapping[]>\r\n {\r\n\r\n   const productsMapResult = this.angularFireCloudStore\r\n                         .collection(environment.SHOP_LIST_COLLECTION)\r\n                         .doc(shopCode)\r\n                         .collection<ProductCategoryProductMapping>(environment.PRODUCT_CATEGORY_MAPPING, ref => ref.where(\"categoryId\",\"==\",categorCode))\r\n                         .valueChanges()\r\n                         .pipe(catchError(err => this.handleError(err,\"getActiveProductMappingListByCategoryCode\")));                   \r\nreturn productsMapResult;\r\n }\r\n\r\n\r\n getActiveProduct(productId:string,shopCode:string):Observable<Product>\r\n {\r\n  const productRef = this.angularFireCloudStore.collection(environment.SHOP_LIST_COLLECTION)\r\n                     .doc(shopCode)\r\n                     .collection<Product>(environment.PRODUCT_LIST,ref => ref.where(\"status\",\"==\",\"a\"))\r\n                     .doc(productId)\r\n                      .valueChanges()\r\n                      .pipe(map(finalData => {\r\n                        console.log(\"data is :\"+finalData.name);\r\n                        return ({...finalData,id:productId})   // load the id.\r\n                      }),\r\n                        catchError(err => this.handleError(err,\"getActiveProduct\")));\r\n                     return productRef;\r\n  \r\n }\r\n\r\n\r\n getActiveProductList(categoryCode:string,shopCode:string):Observable<Product[]>\r\n {\r\n   const productList = this.getActiveProductMappingListByCategoryCode(categoryCode,shopCode)\r\n                      .pipe(\r\n                       mergeMap((productMapping:ProductCategoryProductMapping[]) => \r\n                       from(productMapping).pipe(\r\n                        mergeMap(\r\n                          pMap => this.getActiveProduct(pMap.productId,shopCode)\r\n                          .pipe(map(\r\n                           product =>  ({...product})\r\n                          ),first()\r\n                          ) \r\n                        ),toArray(),\r\n                       ),\r\n                       ),\r\n                       catchError(err => this.handleError(err,\"getActiveProductList\"))\r\n                      );\r\n                      return productList;\r\n }\r\n\r\n  private handleError(error: HttpErrorResponse,caller:string= null) {\r\n  if (error.error instanceof ErrorEvent) {\r\n    // A client-side or network error occurred. Handle it accordingly.\r\n    console.error('An error occurred:', error.error.message);\r\n  } else {\r\n    // The backend returned an unsuccessful response code.\r\n    // The response body may contain clues as to what went wrong.\r\n    console.error(\r\n      `Backend returned code ${error.status}, ` +\r\n      `body was: ${error.error}`);\r\n      console.error(\"Detailed error is :\"+error +\"and caller is:\"+caller);\r\n  }\r\n  // Return an observable with a user-facing error message.\r\n  return throwError(\r\n    'Something bad happened; please try again later.');\r\n}\r\n\r\n\r\n}\r\n"]}