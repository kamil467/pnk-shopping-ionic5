{"version":3,"sources":["webpack:///src/app/pages/my-basket/basket.html","webpack:///src/app/pages/my-basket/basket-routing.module.ts","webpack:///src/app/pages/my-basket/basket.module.ts","webpack:///src/app/pages/my-basket/basket.scss","webpack:///src/app/pages/my-basket/basket.ts"],"names":["routes","path","component","BasketPageRoutingModule","imports","forChild","exports","BasketPageModule","declarations","entryComponents","BasketPage","navCtrl","basketProvider","alert","angularFireAuth","accountProvider","orderProvider","appService","toastController","activatedRoute","router","showOrderNowButton","basketTotalAmount","isLoggedIn","loading$","loading","asObservable","navParams","basketItems","getBasketForOrder","updateTotal","getLoggedInUser","item","console","log","productId","addItemToBasketOverload","items","totalAmount","forEach","i","totalPrice","removeItemFromBasket","emptyProductAllQuantity","emptyBasket","errorMessage","componenet","create","cssClass","header","subHeader","message","buttons","present","pop","subscribe","result","caluclateTotalAmount","userLoggedSubscription","authState","pipe","user","phoneNumber","isServiceAvailable","getCustomer","customer","isFound","re","serviceArea","pincode","postCode","undefined","orderRef","text","role","handler","createOrder","presentConfirmOrderAlert","createOrderRef","basket","placeOrder","processingOrder","dismiss","presentCustomerOrderSuccessToast","navigateRoot","then","navigate","error","presentAlert","duration","position","color","toast","selector","template"],"mappings":"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","file":"my-basket-basket-module-es5.js","sourcesContent":["export default \"\\r\\n<ion-header>\\r\\n\\t<ion-toolbar color=\\\"crimson\\\">\\r\\n\\t  <ion-buttons slot=\\\"start\\\">\\r\\n\\t\\t<ion-button (click)=\\\"backButton()\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon></ion-button>\\r\\n\\t  </ion-buttons>\\r\\n\\t <ion-title>\\r\\n\\tMy Basket\\r\\n\\t  </ion-title>\\r\\n\\t</ion-toolbar>\\r\\n  </ion-header>\\r\\n\\r\\n<ion-content class=\\\"basket-content\\\">\\r\\n\\t<div *ngIf=\\\"basketItems | async as myBasket\\\">\\r\\n\\t<ion-card>\\r\\n\\t\\t<ion-card-header class=\\\"card-header\\\">Cart Summary</ion-card-header>\\r\\n\\r\\n\\t\\t\\t<ion-grid class=\\\"text-center\\\">\\r\\n\\t\\t\\t\\t<ion-row class=\\\"text-center\\\">\\r\\n\\t\\t\\t\\t\\t<ion-col col-3>\\r\\n\\t\\t\\t\\t\\t\\tProduct Name\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col-3>\\r\\n\\t\\t\\t\\t\\t\\tPrice\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col-3>\\r\\n\\t\\t\\t\\t\\t\\tQty\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col-2>\\r\\n\\t\\t\\t\\t\\t\\tTotal\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t<ion-col col-1>\\r\\n\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\t<hr class=\\\"hr-divider\\\" />\\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let item of myBasket.items\\\">\\r\\n\\t\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t\\t<ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"item.productImageUrl != null; then customImage;else defaultImage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template #customImage>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<img [src]=\\\"item.productImageUrl\\\" />\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #defaultImage>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<img\\r\\n\\t\\t\\t\\t  src=\\\"../../../assets/img/default.jpg\\\"\\r\\n\\t\\t\\t\\t/>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\t\\t\\t\\t \\r\\n\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{item.name}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ion-col col-3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{item.pricePerQuantity  | currency:'INR'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ion-col col-3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tqty:{{item.quantity}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-icon name=\\\"add-circle\\\" style=\\\"margin-bottom:8px;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"addQuantity(item)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ion-icon name=\\\"remove-circle\\\" (click)=\\\"removeQuantity(item)\\\"></ion-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ion-col col-2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{item.totalPrice  | currency:'INR'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t<ion-col col-1>\\r\\n\\t\\t\\t\\t  <ion-icon name=\\\"trash\\\" (click)=\\\"removeEntireProduct(item)\\\"></ion-icon>\\r\\n\\t\\t\\t\\t</ion-col>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t</ion-row>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<hr class=\\\"hr-divider\\\" />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t<ion-col col-6>\\r\\n\\t\\t\\t\\t\\t\\tTotal\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col style=\\\"font-weight:Bold\\\">\\r\\n\\t\\t\\t\\t   {{basketTotalAmount | currency:'INR'}}\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col-1>\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t<ion-col col-6>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col style=\\\"font-weight:Bold\\\">\\r\\n\\t\\t\\t\\t         +\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col-1>\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t<ion-col col-6>\\r\\n\\t\\t\\t\\t\\t\\tDelivery fee\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col style=\\\"font-weight:Bold\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{myBasket.deliveryOrderConfig.deliveryCharge | currency:'INR'}}\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col-1>\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t<ion-col col-6>\\r\\n\\t\\t\\t\\t\\t\\tNet Total\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col style=\\\"font-weight:Bold\\\">\\r\\n\\t\\t\\t\\t   {{(basketTotalAmount + myBasket.deliveryOrderConfig.deliveryCharge) | currency:'INR'}}\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t\\t<ion-col col-1>\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t</ion-row>\\r\\n\\r\\n\\t\\t\\t</ion-grid>\\r\\n\\r\\n\\t\\t\\r\\n\\r\\n\\r\\n\\t<ng-template #emptyCart>\\r\\n\\t\\tYour cart is empty. Please add product into your cart.\\r\\n\\t</ng-template>\\r\\n\\t</ion-card>\\r\\n\\r\\n\\t<ion-card >\\r\\n\\t\\t<ion-card-header class=\\\"card-header\\\">Checkout \\t<ion-icon name=\\\"checkmark-circle\\\"></ion-icon></ion-card-header>\\r\\n\\t\\t<ion-card-content>\\r\\n\\t\\t\\t<div  *ngIf=\\\"((basketTotalAmount + myBasket.deliveryOrderConfig.deliveryCharge) < myBasket.deliveryOrderConfig.minimumOrderValue); let lessTrue\\\">\\r\\n\\t\\t\\t\\t<ion-chip color=\\\"crimson\\\" >\\r\\n\\t\\t\\t\\t\\t<ion-icon name=\\\"close-circle\\\"></ion-icon>\\r\\n\\t\\t\\t\\t\\t<ion-label>Minimum Order value : <strong> {{myBasket.deliveryOrderConfig.minimumOrderValue | currency :'INR'}} </strong></ion-label>\\r\\n\\t\\t\\t\\t</ion-chip>\\r\\n               \\r\\n            \\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"(myBasket.totalItemsCount > myBasket.deliveryOrderConfig.maximumQuantity) let maxQuantityTrue\\\">\\r\\n\\t\\t\\t\\t<ion-chip color=\\\"crimson\\\" >\\r\\n\\t\\t\\t\\t\\t<ion-icon name=\\\"close-circle\\\"></ion-icon>\\r\\n\\t\\t\\t\\t\\t<ion-label>Maximum Item Count : <strong> {{myBasket.deliveryOrderConfig.maximumQuantity }} </strong></ion-label>\\r\\n\\t\\t\\t\\t</ion-chip>\\r\\n\\t\\t\\t   </div>\\r\\n\\t\\t\\t<div *ngIf=\\\"((basketTotalAmount + myBasket.deliveryOrderConfig.deliveryCharge) > myBasket.deliveryOrderConfig.maximumOrderValue) let maxOrderTrue\\\">\\r\\n\\t\\t\\t\\t<ion-chip color=\\\"crimson\\\" >\\r\\n\\t\\t\\t\\t\\t<ion-icon name=\\\"close-circle\\\"></ion-icon>\\r\\n\\t\\t\\t\\t\\t<ion-label>Maximum Order value : <strong> {{myBasket.deliveryOrderConfig.maximumOrderValue | currency :'INR'}} </strong></ion-label>\\r\\n\\t\\t\\t\\t</ion-chip>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t<div *ngIf=\\\"((basketTotalAmount + myBasket.deliveryOrderConfig.deliveryCharge) > myBasket.deliveryOrderConfig.minimumOrderValue) \\r\\n\\t\\t\\t\\t&& ((basketTotalAmount + myBasket.deliveryOrderConfig.deliveryCharge) < myBasket.deliveryOrderConfig.maximumOrderValue)\\r\\n\\t\\t\\t\\\">\\r\\n\\r\\n\\t\\t    <ng-container *ngIf=\\\"isLoggedIn; then showOrderNow; else showLogin\\\">\\r\\n\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-template #showOrderNow>\\r\\n\\t\\t\\t\\t<div class=\\\"text-center\\\" *ngIf=\\\"showOrderNowButton\\\">\\r\\n\\t\\t\\t\\t\\t<!-- check customer postal code and shop service area postal code-->\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"isServiceAvailable | async as isAvailable ; else noService\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ion-button class=\\\"order-now\\\" fill=\\\"outline\\\" *ngIf=\\\"isAvailable=='true'\\\" round color=\\\"crimson\\\" (click)=\\\"createOrderButtonClicked()\\\"> Order Now</ion-button>\\r\\n\\t\\t\\t\\t\\t    <ion-card  *ngIf=\\\"isAvailable=='false'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ion-card-header color=\\\"crimson\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t No Service  <ion-icon name=\\\"alert\\\"></ion-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ion-card-header>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ion-card-content>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ion-label><strong>Sorry this store doesn't have delivery service at your pincode. \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tWe are expanding our service, soon we will cover your location.</strong> </ion-label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ion-card-content>\\r\\n\\t\\t\\t\\t\\t\\t</ion-card>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<ng-template #noService>\\r\\n\\t\\t\\t\\t\\t\\t<ion-spinner   name=\\\"bubbles\\\" >\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</ion-spinner>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t   </div>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t<!--Below button should take the user to login -->\\t\\t\\r\\n\\t\\t<ng-template #showLogin>\\r\\n\\t\\t\\t<div class=\\\"text-center\\\">\\r\\n\\t\\t\\t\\t<ion-button class=\\\"order-now\\\" fill=\\\"outline\\\" routerLink=\\\"/app/tabs/login\\\" round color=\\\"crimson\\\">Login to Check out </ion-button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ng-template>\\r\\n\\t\\t \\r\\n\\t</div>\\r\\n\\t\\t</ion-card-content>\\r\\n\\t </ion-card>\\r\\n\\t\\r\\n</div>\\r\\n\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport {RouterModule,  Routes } from '@angular/router';\r\nimport { BasketPage } from './basket';\r\n\r\n\r\n\r\nconst routes:Routes=[\r\n  {\r\n  path:'',\r\n  component:BasketPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes)],\r\n  exports:[RouterModule],\r\n})\r\nexport class BasketPageRoutingModule { }","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { BasketPage } from \"./basket\";\r\nimport { BasketPageRoutingModule } from \"./basket-routing.module\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule,BasketPageRoutingModule],\r\n  declarations: [BasketPage],\r\n  entryComponents: [BasketPage]\r\n})\r\nexport class BasketPageModule {}\r\n","export default \".basket-content {\\n  background-color: crimson;\\n  color: white;\\n}\\n\\n.hr-divider {\\n  border-top: 2px solid crimson;\\n  width: 800px;\\n}\\n\\n.order-now {\\n  color: white;\\n  font-weight: bold;\\n}\\n\\n.text-center {\\n  text-align: center;\\n}\\n\\nion-card-header {\\n  background-color: #b94545;\\n  color: white;\\n}\\n\\nion-toolbar {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbXktYmFza2V0L0M6XFxJb25pY1Byb2plY3RcXHBuay1zaG9wcGluZy1pb25pYzUvc3JjXFxhcHBcXHBhZ2VzXFxteS1iYXNrZXRcXGJhc2tldC5zY3NzIiwic3JjL2FwcC9wYWdlcy9teS1iYXNrZXQvYmFza2V0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSx5QkFBQTtFQUNBLFlBQUE7QUNBRjs7QURFQztFQUVFLDZCQUFBO0VBQ0MsWUFBQTtBQ0FKOztBREVBO0VBRUUsWUFBQTtFQUNBLGlCQUFBO0FDQUY7O0FERUE7RUFFRSxrQkFBQTtBQ0FGOztBREdBO0VBRUUseUJBQUE7RUFDQSxZQUFBO0FDREY7O0FESUE7RUFFSSxZQUFBO0FDRkoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9teS1iYXNrZXQvYmFza2V0LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFza2V0LWNvbnRlbnRcclxue1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGNyaW1zb247XHJcbiAgY29sb3I6d2hpdGU7XHJcbn1cclxuIC5oci1kaXZpZGVyXHJcbiB7XHJcbiAgIGJvcmRlci10b3A6IDJweCBzb2xpZCBjcmltc29uO1xyXG4gICAgd2lkdGg6IDgwMHB4O1xyXG4gfVxyXG4ub3JkZXItbm93XHJcbntcclxuICBjb2xvcjp3aGl0ZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4udGV4dC1jZW50ZXJcclxue1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuaW9uLWNhcmQtaGVhZGVyXHJcbntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjk0NTQ1O1xyXG4gIGNvbG9yOndoaXRlO1xyXG59XHJcblxyXG5pb24tdG9vbGJhclxyXG57XHJcbiAgICBjb2xvcjp3aGl0ZTtcclxufSIsIi5iYXNrZXQtY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNyaW1zb247XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmhyLWRpdmlkZXIge1xuICBib3JkZXItdG9wOiAycHggc29saWQgY3JpbXNvbjtcbiAgd2lkdGg6IDgwMHB4O1xufVxuXG4ub3JkZXItbm93IHtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnRleHQtY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5pb24tY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjk0NTQ1O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbmlvbi10b29sYmFyIHtcbiAgY29sb3I6IHdoaXRlO1xufSJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { AngularFireAuth } from \"@angular/fire/auth\";\r\nimport { ActivatedRoute,Router } from \"@angular/router\";\r\nimport { AlertController, NavController, NavParams, ToastController } from \"@ionic/angular\";\r\nimport { Observable, Subscription } from \"rxjs\";\r\nimport { catchError, concatMap, finalize, first, map, shareReplay } from \"rxjs/operators\";\r\nimport { BasketObj, OrderItem } from \"../../interfaces/basket-interface\";\r\nimport { AccountProvider } from \"../../providers/account-provider\";\r\nimport { AppService } from \"../../providers/app.service\";\r\nimport { BasketProvider } from \"../../providers/basket-provider\";\r\nimport { OrderProvider } from \"../../providers/order-provider\";\r\n\r\n\r\n@Component({\r\n  selector: \"page-basket\",\r\n  templateUrl: \"basket.html\",\r\n  styleUrls: [\"basket.scss\"]\r\n})\r\nexport class BasketPage   implements OnInit {\r\n  showOrderNowButton:boolean = true;\r\n  basketItems: Observable<BasketObj>;\r\n  storecode: string;\r\n  basketTotalAmount: number = 0;\r\n  userLoggedSubscription:Subscription;\r\n  isLoggedIn:boolean= false;\r\n  isServiceAvailable:Observable<string>\r\n  orderRef:Subscription;\r\n  public loading$ = this.appService.loading.asObservable();   // get the subject value.\r\n\r\npublic navParams = new NavParams();\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public basketProvider: BasketProvider,public alert:AlertController,\r\n   public angularFireAuth: AngularFireAuth,\r\n   public accountProvider:AccountProvider,\r\n   private orderProvider:OrderProvider,\r\n   public appService:AppService,\r\n   public toastController: ToastController,\r\n   public activatedRoute:ActivatedRoute,\r\n   public router:Router\r\n  ) {\r\n   \r\n  }\r\n\r\n  ngOnInit(){\r\n  this.basketItems  = this.basketProvider.getBasketForOrder();  // load basket Items\r\n  this.updateTotal();\r\n  }\r\n  ionViewWillEnter()\r\n  {\r\n    this.getLoggedInUser();\r\n  }\r\n\r\n  addQuantity(item: OrderItem) {\r\n    console.log(\"Item id is:\" + item.productId);\r\n    this.basketProvider.addItemToBasketOverload(item);\r\n    this.updateTotal();\r\n  }\r\n\r\n  caluclateTotalAmount(items: OrderItem[]): number {\r\n    let totalAmount = 0;\r\n    items.forEach(i => {\r\n      totalAmount = totalAmount + i.totalPrice;\r\n    });\r\n    return totalAmount;\r\n  }\r\n  removeQuantity(item: OrderItem) {\r\n    this.basketProvider.removeItemFromBasket(item);\r\n    this.updateTotal();\r\n  }\r\n\r\n  removeEntireProduct(item:OrderItem)\r\n  {\r\n     this.basketProvider.emptyProductAllQuantity(item);\r\n     this.updateTotal();\r\n  }\r\n\r\n  emptyWholeBasket()\r\n  {\r\n    this.basketProvider.emptyBasket();\r\n  }\r\n  async presentAlert(errorMessage:any,componenet:string) {\r\n    const alert = await this.alert.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Alert',\r\n      subHeader: 'Error Occurred:'+errorMessage,\r\n      message: 'Error:'+componenet,\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n   backButton()\r\n   {\r\n     this.navCtrl.pop();\r\n   }\r\nupdateTotal()\r\n{\r\n  this.basketProvider.getBasketForOrder().subscribe(result=>{\r\n    this.basketTotalAmount =  this.caluclateTotalAmount(result.items);    // perform total\r\n    });\r\n}\r\ngetLoggedInUser()\r\n{\r\n this.userLoggedSubscription = this.angularFireAuth.authState.pipe(first()).subscribe(user =>\r\n  {\r\n    if(user)\r\n    {\r\n      this.isLoggedIn = true;\r\n      // check for shop service area pincode and customer location pin code.\r\n       \r\n      console.log(\"Logged in User :\"+user.phoneNumber);\r\n    }\r\n    else{\r\n      this.isLoggedIn = false;\r\n      console.log(\"anonymous user\");\r\n    }\r\n  });\r\n\r\n this.isServiceAvailable = this.angularFireAuth.authState.pipe(first(),\r\n  concatMap(user => \r\n    this.accountProvider.getCustomer(user.phoneNumber)\r\n    .pipe(first(),\r\n  concatMap(customer => this.basketProvider.getBasketForOrder().pipe(first(),map(result =>  {\r\n      let isFound = \"false\";\r\n      console.log(result);\r\n     const re =  result.serviceArea.forEach(serviceArea =>{\r\n                  if(serviceArea.pincode==customer.postCode)\r\n                  {\r\n                    isFound = \"true\";\r\n                    return;\r\n                  }\r\n                      \r\n    })\r\n    return isFound; \r\n  }))))),\r\n  );\r\n\r\n}\r\nngOnDestroy()\r\n{\r\n  if( this.userLoggedSubscription != undefined){\r\n   // this.userLoggedSubscription.unsubscribe();\r\n  }\r\n if(  this.orderRef != undefined)\r\n {\r\n  //this.orderRef.unsubscribe();\r\n }\r\n}\r\n\r\nasync presentConfirmOrderAlert() {\r\n  const alert = await this.alert.create({\r\n    cssClass: 'my-custom-class',\r\n    header: 'Order Confirmation!',\r\n    message: '<strong>Would you like to place the order?</strong>!!!',\r\n    buttons: [\r\n      {\r\n        text: 'Cancel',\r\n        role: 'cancel',\r\n        cssClass: 'secondary',\r\n        handler: () => {\r\n         // do nothing.\r\n        }\r\n      }, {\r\n        text: 'Okay',\r\n        handler: () => {\r\n          // create order.\r\n          this.createOrder();\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  await alert.present();\r\n}\r\nasync createOrderButtonClicked()\r\n{\r\n await this.presentConfirmOrderAlert();\r\n}\r\n\r\nasync createOrder()\r\n{\r\n  const createOrderRef = this.angularFireAuth.authState.pipe(first(),\r\n  concatMap(user => \r\n    this.accountProvider.getCustomer(user.phoneNumber)\r\n    .pipe(first(),\r\n  concatMap(customer => this.basketProvider.getBasketForOrder().pipe(first(),concatMap(basket =>\r\n    this.orderProvider.placeOrder(basket,customer)))))));  \r\n    // prsent pop\r\n\r\n    const processingOrder = await this.alert.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Placing your order!',\r\n      message: '<strong>Please kindly wait...!!!</strong>',\r\n    });\r\n    processingOrder.present();\r\n\r\n\r\n   this.orderRef= createOrderRef.subscribe(result =>{\r\n      if(result){\r\n      // order successfully placed.\r\n       // show toast\r\n      console.log(\"Order success:\"+result);\r\n\r\n      // dismiss it here\r\n      processingOrder.dismiss();\r\n      this.presentCustomerOrderSuccessToast();\r\n      // navigate to order page.\r\n      this.navCtrl.navigateRoot('/app/tabs/market').then(()=>{\r\n        this.router.navigate(['/app/tabs/myorder']);\r\n      })\r\n   \r\n      }\r\n      else{\r\n      processingOrder.dismiss();\r\n      console.error(\"Order failed\");\r\n      this.presentAlert(\"Order failed.\",\"createOrder\");\r\n      }\r\n\r\n    });\r\n                            \r\n}\r\n\r\n\r\nasync presentCustomerOrderSuccessToast() {\r\n  const toast = await this.toastController.create({\r\n    message: 'Your order has been successfully placed.',\r\n    duration: 2000,\r\n    position:'top',\r\n    color:\"success\"\r\n  });\r\n  toast.present();\r\n}\r\n\r\n}\r\n"]}